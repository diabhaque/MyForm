{"ast":null,"code":"import _slicedToArray from \"/Users/diab/Desktop/WHub/form-builder/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diab/Desktop/WHub/form-builder/Client/src/components/CreateFormCard.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: 200,\n    marginTop: '30px',\n    marginLeft: '30px'\n  },\n  mainDiv: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: \"flex-start\"\n  }\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nexport default function CreateFormCard({\n  getForms\n}) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(getModalStyle),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        modalStyle = _React$useState2[0];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  let name = \"\";\n  let author = \"\";\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onNameChange = event => {\n    name = event.target.value;\n  };\n\n  const onAuthorChange = event => {\n    author = event.target.value;\n  };\n\n  const submit = () => {\n    fetch('http://localhost:8081/addform', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name\n      })\n    }).then(response => console.log(response));\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    className: classes.mainDiv,\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.imgDiv,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(AddRoundedIcon, {\n    color: \"secondary\",\n    style: {\n      fontSize: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Add Form\"))), React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"title\",\n    id: \"outlined-full-width\",\n    label: \"Form Name\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Placeholder\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: onNameChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: \"title\",\n    id: \"outlined-full-width\",\n    label: \"Form Name\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Placeholder\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: onNameChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: \"title\",\n    id: \"outlined-full-width\",\n    label: \"Form Name\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Placeholder\",\n    fullWidth: true,\n    margin: \"normal\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: onNameChange,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(Button, {\n    size: \"small\",\n    variant: \"outlined\",\n    onClick: submit,\n    style: {\n      width: '100px',\n      marginLeft: '8px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Create\")))));\n}","map":{"version":3,"sources":["/Users/diab/Desktop/WHub/form-builder/Client/src/components/CreateFormCard.js"],"names":["React","makeStyles","Card","CardActionArea","Button","Typography","AddRoundedIcon","Modal","TextField","useStyles","theme","card","width","marginTop","marginLeft","mainDiv","display","flexDirection","justifyContent","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","root","rand","Math","round","random","getModalStyle","top","left","transform","CreateFormCard","getForms","classes","useState","modalStyle","open","setOpen","name","author","handleOpen","handleClose","onNameChange","event","target","value","onAuthorChange","submit","fetch","method","headers","body","JSON","stringify","then","response","console","log","imgDiv","fontSize","margin","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        width: 200,\n        marginTop: '30px',\n        marginLeft: '30px',\n    },\n    mainDiv: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root:{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: \"flex-start\",\n    }\n  }));\n\n\nfunction rand() {\n    return Math.round(Math.random() * 20) - 10;\n  }\n  \n  function getModalStyle() {\n    const top = 50 + rand();\n    const left = 50 + rand();\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\nexport default function CreateFormCard({getForms}) {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n  let name=\"\";\n  let author=\"\";\n\n  const handleOpen=()=>{\n      setOpen(true);\n  }\n\n  const handleClose=()=>{\n      setOpen(false);\n  }\n\n  const onNameChange=(event)=>{\n    name=event.target.value;\n  }\n  const onAuthorChange=(event)=>{\n    author=event.target.value;\n  }\n  const submit=()=>{\n    fetch('http://localhost:8081/addform', {\n        method: 'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n            name: name,\n        })  \n    })\n    .then(response=>console.log(response))\n\n    setOpen(false);\n  }\n\n\n  return (\n      <div>\n        <Card className={classes.card}>\n            <CardActionArea className={classes.mainDiv} onClick={handleOpen}>\n                <div className={classes.imgDiv}>\n                <AddRoundedIcon\n                    color='secondary'\n                    style={{\n                        fontSize: 200\n                    }}\n                />\n                </div>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    Add Form\n                </Typography>\n            </CardActionArea>\n        </Card>\n        <Modal\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n            open={open}\n            onClose={handleClose}\n        >\n            <div style={modalStyle} className={classes.paper}>\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField\n                    name=\"title\"\n                    id=\"outlined-full-width\"\n                    label=\"Form Name\"\n                    style={{ margin: 8 }}\n                    placeholder=\"Placeholder\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    onChange={onNameChange}\n                    variant=\"outlined\"\n                />\n                <TextField\n                    name=\"title\"\n                    id=\"outlined-full-width\"\n                    label=\"Form Name\"\n                    style={{ margin: 8 }}\n                    placeholder=\"Placeholder\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    onChange={onNameChange}\n                    variant=\"outlined\"\n                />\n                <TextField\n                    name=\"title\"\n                    id=\"outlined-full-width\"\n                    label=\"Form Name\"\n                    style={{ margin: 8 }}\n                    placeholder=\"Placeholder\"\n                    fullWidth\n                    margin=\"normal\"\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    onChange={onNameChange}\n                    variant=\"outlined\"\n                />\n                <Button size=\"small\" variant=\"outlined\" onClick={submit} style={{width: '100px', marginLeft:'8px'}}>Create</Button>\n            </form>\n            </div>\n        </Modal>\n      </div>\n    \n  );\n}\n"]},"metadata":{},"sourceType":"module"}