{"ast":null,"code":"import _slicedToArray from \"/Users/diab/Desktop/WHub/form-builder/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diab/Desktop/WHub/form-builder/Client/src/components/CreateFormCard.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  card: {\n    width: 200,\n    marginTop: '30px',\n    marginLeft: '30px'\n  },\n  mainDiv: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: \"flex-start\"\n  }\n}));\n\nconst getModalStyle = () => {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n};\n\nconst _React$useState = React.useState(getModalStyle),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      modalStyle = _React$useState2[0];\n\nconst _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\nconst rand = () => {\n  return Math.round(Math.random() * 20) - 10;\n};\n\nconst handleOpen = () => {\n  setOpen(true);\n};\n\nconst handleClose = () => {\n  setOpen(false);\n};\n\nconst onNameChange = event => {\n  this.setState({\n    name: event.target.value\n  });\n};\n\nconst classes = useStyles();\n\nconst submit = () => {\n  fetch('http://localhost:8081/addform', {\n    method: 'post',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: name\n    })\n  }).then(response => response.json()).then(done => console.log(done));\n  setOpen(false);\n};\n\nclass CreateFormCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      className: classes.mainDiv,\n      onClick: handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.imgDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(AddRoundedIcon, {\n      color: \"secondary\",\n      style: {\n        fontSize: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Add Form\"))), React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: open,\n      onClose: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"title\",\n      id: \"outlined-full-width\",\n      label: \"Form Name\",\n      style: {\n        margin: 8\n      },\n      placeholder: \"Placeholder\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: onNameChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      onClick: submit,\n      style: {\n        width: '100px',\n        marginLeft: '8px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Create\")))));\n  }\n\n}\n\nexport default CreateFormCard;","map":{"version":3,"sources":["/Users/diab/Desktop/WHub/form-builder/Client/src/components/CreateFormCard.js"],"names":["React","makeStyles","Card","CardActionArea","Button","Typography","AddRoundedIcon","Modal","TextField","useStyles","theme","card","width","marginTop","marginLeft","mainDiv","display","flexDirection","justifyContent","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","root","getModalStyle","top","rand","left","transform","useState","modalStyle","open","setOpen","Math","round","random","handleOpen","handleClose","onNameChange","event","setState","name","target","value","classes","submit","fetch","method","headers","body","JSON","stringify","then","response","json","done","console","log","CreateFormCard","Component","constructor","props","state","render","imgDiv","fontSize","margin","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        width: 200,\n        marginTop: '30px',\n        marginLeft: '30px',\n    },\n    mainDiv: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n    },\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    root:{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: \"flex-start\",\n    }\n}));\n\nconst getModalStyle=()=>{\n    const top = 50 + rand();\n    const left = 50 + rand();\n  \n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\nconst [modalStyle] = React.useState(getModalStyle);\nconst [open, setOpen] = React.useState(false);\n\nconst rand=()=>{\n    return Math.round(Math.random() * 20) - 10;\n}\n\nconst handleOpen=()=>{\n    setOpen(true);\n}\n\nconst handleClose=()=>{\n    setOpen(false);\n}\n\nconst onNameChange=(event)=>{\n    this.setState({\n        name:event.target.value,\n    })\n}\n\nconst classes = useStyles();\n\nconst submit=()=>{\n    fetch('http://localhost:8081/addform', {\n        method: 'post',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify({\n            name: name,\n        })  \n    })\n    .then(response=>response.json())\n    .then(done=>console.log(done))\n    setOpen(false);\n}\n\n\nclass CreateFormCard extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name:'',\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Card className={classes.card}>\n                    <CardActionArea className={classes.mainDiv} onClick={handleOpen}>\n                        <div className={classes.imgDiv}>\n                        <AddRoundedIcon\n                            color='secondary'\n                            style={{\n                                fontSize: 200\n                            }}\n                        />\n                        </div>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Add Form\n                        </Typography>\n                    </CardActionArea>\n                </Card>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={open}\n                    onClose={handleClose}\n                >\n                    <div style={modalStyle} className={classes.paper}>\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n                        <TextField\n                            name=\"title\"\n                            id=\"outlined-full-width\"\n                            label=\"Form Name\"\n                            style={{ margin: 8 }}\n                            placeholder=\"Placeholder\"\n                            fullWidth\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={onNameChange}\n                            variant=\"outlined\"\n                        />\n                        <Button size=\"small\" variant=\"outlined\" onClick={submit} style={{width: '100px', marginLeft:'8px'}}>Create</Button>\n                    </form>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CreateFormCard;"]},"metadata":{},"sourceType":"module"}