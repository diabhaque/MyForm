{"ast":null,"code":"import _slicedToArray from \"/Users/diab/Desktop/WHub/form-builder/Client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/diab/Desktop/WHub/form-builder/Client/src/components/CreateFormCard.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\n\nclass CreateFormCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.useStyles = makeStyles(theme => ({\n      card: {\n        width: 200,\n        marginTop: '30px',\n        marginLeft: '30px'\n      },\n      mainDiv: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\"\n      },\n      paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3)\n      },\n      root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: \"flex-start\"\n      }\n    }));\n\n    this.rand = () => {\n      return Math.round(Math.random() * 20) - 10;\n    };\n\n    this.getModalStyle = () => {\n      const top = 50 + rand();\n      const left = 50 + rand();\n      return {\n        top: \"\".concat(top, \"%\"),\n        left: \"\".concat(left, \"%\"),\n        transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n      };\n    };\n\n    this.handleOpen = () => {\n      setOpen(true);\n    };\n\n    this.handleClose = () => {\n      setOpen(false);\n    };\n\n    this.onNameChange = event => {\n      name = event.target.value;\n    };\n\n    this.submit = () => {\n      fetch('http://localhost:8081/addform', {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name\n        })\n      }).then(response => response.json()).then(done => console.log(done));\n      setOpen(false);\n    };\n\n    this.state = {\n      name: ''\n    };\n  }\n\n  render() {\n    classes = useStyles();\n\n    var _React$useState = React.useState(getModalStyle);\n\n    var _React$useState2 = _slicedToArray(_React$useState, 1);\n\n    modalStyle = _React$useState2[0];\n\n    var _React$useState3 = React.useState(false);\n\n    var _React$useState4 = _slicedToArray(_React$useState3, 2);\n\n    open = _React$useState4[0];\n    setOpen = _React$useState4[1];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(CardActionArea, {\n      className: classes.mainDiv,\n      onClick: handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.imgDiv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(AddRoundedIcon, {\n      color: \"secondary\",\n      style: {\n        fontSize: 200\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Add Form\"))), React.createElement(Modal, {\n      \"aria-labelledby\": \"simple-modal-title\",\n      \"aria-describedby\": \"simple-modal-description\",\n      open: open,\n      onClose: handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      name: \"title\",\n      id: \"outlined-full-width\",\n      label: \"Form Name\",\n      style: {\n        margin: 8\n      },\n      placeholder: \"Placeholder\",\n      fullWidth: true,\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      onChange: onNameChange,\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Button, {\n      size: \"small\",\n      variant: \"outlined\",\n      onClick: submit,\n      style: {\n        width: '100px',\n        marginLeft: '8px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Create\")))));\n  }\n\n}\n\nexport default CreateFormCard;","map":{"version":3,"sources":["/Users/diab/Desktop/WHub/form-builder/Client/src/components/CreateFormCard.js"],"names":["React","makeStyles","Card","CardActionArea","Button","Typography","AddRoundedIcon","Modal","TextField","CreateFormCard","Component","constructor","props","useStyles","theme","card","width","marginTop","marginLeft","mainDiv","display","flexDirection","justifyContent","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","root","rand","Math","round","random","getModalStyle","top","left","transform","handleOpen","setOpen","handleClose","onNameChange","event","name","target","value","submit","fetch","method","headers","body","JSON","stringify","then","response","json","done","console","log","state","render","classes","useState","modalStyle","open","imgDiv","fontSize","margin","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddRoundedIcon from '@material-ui/icons/AddRounded';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\n\nclass CreateFormCard extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            name:'',\n        }\n    }\n\n    useStyles = makeStyles(theme => ({\n        card: {\n            width: 200,\n            marginTop: '30px',\n            marginLeft: '30px',\n        },\n        mainDiv: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n        },\n        paper: {\n            position: 'absolute',\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: '2px solid #000',\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n        },\n        root:{\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: \"flex-start\",\n        }\n    }));\n\n    rand=()=>{\n        return Math.round(Math.random() * 20) - 10;\n    }\n      \n    getModalStyle=()=>{\n        const top = 50 + rand();\n        const left = 50 + rand();\n      \n        return {\n          top: `${top}%`,\n          left: `${left}%`,\n          transform: `translate(-${top}%, -${left}%)`,\n        };\n    }\n\n    handleOpen=()=>{\n        setOpen(true);\n    }\n\n    handleClose=()=>{\n        setOpen(false);\n    }\n    onNameChange=(event)=>{\n        name=event.target.value;\n    }\n\n    submit=()=>{\n        fetch('http://localhost:8081/addform', {\n            method: 'post',\n            headers: {'Content-type': 'application/json'},\n            body: JSON.stringify({\n                name: name,\n            })  \n        })\n        .then(response=>response.json())\n        .then(done=>console.log(done))\n        setOpen(false);\n    }\n\n\n    render(){\n        classes = useStyles();\n        [modalStyle] = React.useState(getModalStyle);\n        [open, setOpen] = React.useState(false);\n\n        return(\n            <div>\n                <Card className={classes.card}>\n                    <CardActionArea className={classes.mainDiv} onClick={handleOpen}>\n                        <div className={classes.imgDiv}>\n                        <AddRoundedIcon\n                            color='secondary'\n                            style={{\n                                fontSize: 200\n                            }}\n                        />\n                        </div>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Add Form\n                        </Typography>\n                    </CardActionArea>\n                </Card>\n                <Modal\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    open={open}\n                    onClose={handleClose}\n                >\n                    <div style={modalStyle} className={classes.paper}>\n                    <form className={classes.root} noValidate autoComplete=\"off\">\n                        <TextField\n                            name=\"title\"\n                            id=\"outlined-full-width\"\n                            label=\"Form Name\"\n                            style={{ margin: 8 }}\n                            placeholder=\"Placeholder\"\n                            fullWidth\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            onChange={onNameChange}\n                            variant=\"outlined\"\n                        />\n                        <Button size=\"small\" variant=\"outlined\" onClick={submit} style={{width: '100px', marginLeft:'8px'}}>Create</Button>\n                    </form>\n                    </div>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\n\nexport default CreateFormCard;"]},"metadata":{},"sourceType":"module"}